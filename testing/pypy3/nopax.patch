--- a/pypy/goal/targetpypystandalone.py
+++ b/pypy/goal/targetpypystandalone.py
@@ -278,6 +278,8 @@
                 raise Exception("Cannot use the --output option with PyPy "
                                 "when --shared is on (it is by default). "
                                 "See issue #1971.")
+        elif config.translation.nopax is not None:
+            raise Exception("Cannot use the --nopax option when --shared is off (it is on by default).")
 
         # if both profopt and profoptpath are specified then we keep them as they are with no other changes
         if config.translation.profopt:
--- a/rpython/config/translationoption.py
+++ b/rpython/config/translationoption.py
@@ -145,6 +145,9 @@
     BoolOption("profopt", "Enable profile guided optimization. Defaults to enabling this for PyPy. For other training workloads, please specify them in profoptargs",
               cmdline="--profopt", default=False),
     StrOption("profoptargs", "Absolute path to the profile guided optimization training script + the necessary arguments of the script", cmdline="--profoptargs", default=None),
+    BoolOption("nopax", "Use this in case your system comes with a PAX protection. --nopax will disable it for pypy, so that it can use the jit. Requires paxmark to be installed",
+               default=False,
+               cmdline="--nopax"),
     BoolOption("instrument", "internal: turn instrumentation on",
                default=False, cmdline=None),
     BoolOption("countmallocs", "Count mallocs and frees", default=False,
--- a/rpython/translator/c/genc.py
+++ b/rpython/translator/c/genc.py
@@ -331,6 +331,8 @@
         shared = self.config.translation.shared
 
         extra_opts = []
+        if self.config.translation.nopax:
+            extra_opts += ["nopax"]
         if self.config.translation.profopt:
             extra_opts += ["profopt"]
         if self.config.translation.make_jobs != 1:
@@ -396,6 +398,14 @@
                     '$(MAKE) CFLAGS="-fprofile-use -fprofile-correction -fPIC $(CFLAGS) -fno-lto"  LDFLAGS="-fprofile-use $(LDFLAGS) -fno-lto" $(PROFOPT_TARGET)',
                 ]))
 
+         # Nopax code for the makefile
+        if self.config.translation.nopax:
+            mk.definition('PAX_TARGET', '%s'%exe_name)
+            rules.append(('$(PAX_TARGET)', '$(TARGET) main.o', [
+                          '$(CC_LINK) $(LDFLAGS_LINK) main.o -L. -l$(SHARED_IMPORT_LIB) -o $@ $(RPATH_FLAGS)',
+                          'paxmark -zm $(PAX_TARGET)']))
+            mk.rule('nopax', '', '$(MAKE) CFLAGS="$(CFLAGS) $(CFLAGSEXTRA)" LDFLAGS="$(LDFLAGS)" $(PAX_TARGET)')
+
         for rule in rules:
             mk.rule(*rule)
 
